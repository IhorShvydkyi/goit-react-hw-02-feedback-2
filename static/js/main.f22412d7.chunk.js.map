{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["Section","title","children","FeedbackOptionsStyle","styled","div","FeedbackButton","button","FeedbackOptions","onLeaveFeedback","state","Object","keys","map","key","type","id","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","totalSum","positivePercentageSum","App","handleIncrement","setState","prevState","target","countTotalFeedback","reduce","sum","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAgBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,cCJMC,EAAuBC,IAAOC,IAAV,oEAKpBC,EAAiBF,IAAOG,OAAV,ktBCaZC,EAjBS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,gBAAiBC,EAAY,EAAZA,MAC1C,OACE,cAACP,EAAD,UACGQ,OAAOC,KAAKF,GAAOG,KAAI,SAACC,GAAD,OACtB,cAACR,EAAD,CACES,KAAK,SACLC,GAAIF,EAEJG,QAASR,EAJX,SAMGK,GAHIA,SCEAI,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,4BAAIA,OCgCOC,EAhCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzCC,EAAWF,IAEXG,EAAwBF,IAE9B,OACE,8BACGC,EACC,qCACE,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWG,KACX,qDAAwBC,EAAxB,WAGF,8BACE,cAAC,EAAD,CAAcR,QAAQ,gCCf1BS,E,4MACJlB,MAAQ,CACNW,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,gBAAkB,SAACtB,GACjB,EAAKuB,UAAS,SAACC,GAAD,sBACXxB,EAAOyB,OAAOhB,GAAKe,EAAUxB,EAAOyB,OAAOhB,IAAM,O,EAItDiB,mBAAqB,WAInB,OAHiBtB,OAAOC,KAAK,EAAKF,OAAOwB,QAAO,SAACC,EAAKrB,GACpD,OAAOqB,EAAM,EAAKzB,MAAMI,KACvB,I,EAILsB,gCAAkC,WAIhC,OAH2BC,KAAKC,MACX,IAAlB,EAAK5B,MAAMW,KAAc,EAAKY,uB,4CAKnC,WACE,OACE,8BACE,eAAC,EAAD,CAAShC,MAAM,0BAAf,UACE,cAAC,EAAD,CACEQ,gBAAiB8B,KAAKV,gBACtBnB,MAAO6B,KAAK7B,QAEd,4CACA,cAAC,EAAD,CACEW,KAAMkB,KAAK7B,MAAMW,KACjBC,QAASiB,KAAK7B,MAAMY,QACpBC,IAAKgB,KAAK7B,MAAMa,IAChBC,MAAOe,KAAKN,mBACZR,mBAAoBc,KAAKH,2C,GAzCnBI,aAgDHZ,IClDfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f22412d7.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from \"@emotion/styled\";\n\nexport const FeedbackOptionsStyle = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n`;\n\nexport const FeedbackButton = styled.button`\n  display: flex;\n  overflow: hidden;\n\n  margin: 15px;\n  padding: 5px 5px;\n\n  cursor: pointer;\n  transition: all 150ms linear;\n  text-align: center;\n  white-space: nowrap;\n  text-decoration: none !important;\n  text-transform: none;\n  text-transform: capitalize;\n\n  color: #fff;\n  background-color: #416dea;\n  border: 0 none;\n  border-radius: 36px;\n\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 1.3;\n\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 160px;\n  box-shadow: 2px 5px 10px #e4e4e4;\n  &:hover {\n    transition: all 150ms linear;\n\n    opacity: 0.85;\n  }\n  &:focus {\n    outline: 1px dotted #959595;\n    outline-offset: -4px;\n  }\n`;\n","import React from \"react\";\nimport { FeedbackOptionsStyle, FeedbackButton } from \"./FeedbackOptions.styled\";\n\nconst FeedbackOptions = ({ onLeaveFeedback, state }) => {\n  return (\n    <FeedbackOptionsStyle>\n      {Object.keys(state).map((key) => (\n        <FeedbackButton\n          type=\"button\"\n          id={key}\n          key={key}\n          onClick={onLeaveFeedback}\n        >\n          {key}\n        </FeedbackButton>\n      ))}\n    </FeedbackOptionsStyle>\n  );\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => (\n  <>\n    <p>{message}</p>\n  </>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import PropTypes from \"prop-types\";\n\nimport Notification from \"../Notification/Notification\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  const totalSum = total();\n\n  const positivePercentageSum = positivePercentage();\n\n  return (\n    <div>\n      {totalSum ? (\n        <>\n          <p>Good: {good}</p>\n          <p>Neutral: {neutral}</p>\n          <p>Bad: {bad}</p>\n          <p>Total: {totalSum}</p>\n          <p>Positive feedbacks: {positivePercentageSum} %</p>\n        </>\n      ) : (\n        <div>\n          <Notification message=\"This is not a feedback\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  positivePercentageSum: PropTypes.func,\n};\n\nexport default Statistics;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = (button) => {\n    this.setState((prevState) => ({\n      [button.target.id]: prevState[button.target.id] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const totalSum = Object.keys(this.state).reduce((sum, key) => {\n      return sum + this.state[key];\n    }, 0);\n    return totalSum;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const positivePercentage = Math.round(\n      (this.state.good * 100) / this.countTotalFeedback()\n    );\n    return positivePercentage;\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Please leave a feedback\">\n          <FeedbackOptions\n            onLeaveFeedback={this.handleIncrement}\n            state={this.state}\n          />\n          <h2>Statistics</h2>\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback}\n            positivePercentage={this.countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}